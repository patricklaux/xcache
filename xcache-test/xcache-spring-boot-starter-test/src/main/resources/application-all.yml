xcache:
  group: shop # 分组名称 (必填)
  template: # 公共模板配置 (必填，仅需配置与默认配置不同的部分)，列表类型，可配置多个模板。
    - id: t0 # 模板ID (必填)，建议将其中一个模板的 id 配置为 t0。
      charset: UTF-8 # 字符集 (默认 UTF-8)
      cache-lock: # 缓存锁配置
        provider: lettuce # LockProviderId（默认值：embed）
        initial-capacity: 128 # HashMap 初始容量（默认值：256）
        lease-time: 1000 # 锁租期 （默认值：1000 毫秒）
        enable-group-prefix: true # 是否添加 group 作为前缀（默认值：true）
        params: # 用于自定义扩展实现的非标参数，map 类型 （如不使用，请删除，否则会提示参数读取异常）
          test: test
      cache-metrics: log # CacheMetricsProviderId，用于缓存指标信息采集和输出（默认值：log，输出到日志）
      cache-refresh: # 缓存刷新配置
        provider: none # CacheRefreshProviderId（默认值：none，不启用缓存刷新）
        enable-group-prefix: true # 是否添加 group 作为前缀（默认值：true，适用于外部刷新实现）
        refresh-after-write: 10000 # 数据写入缓存后，每隔此配置的时长刷新一次（默认值：3600000 毫秒）
        refresh-tasks-size: 16384 # 刷新线程一个周期发起运行的最大任务数（默认值：16384）
        refresh-sequence-size: 16 # 刷新键序列数量（默认值：16），适用于 Redis 集群模式，其它模式下此配置无效
        refresh-thread-period: 10000 # 刷新线程运行间隔周期（默认值：10000 毫秒）
        shutdown-timeout: 2000 # 等待刷新任务执行完毕的最大时长（默认值：2000 毫秒）
        shutdown-quiet-period: 100 # 静默期：等待刷新任务队列执行完毕的最短时长（默认值：100 毫秒）
        shutdown-behavior: cancel # 刷新任务队列关闭行为（默认值：IGNORE，不做任何处理，既不取消也不等待）
        params: # 用于自定义扩展实现的非标参数，map 类型 （如不使用，请删除，否则会提示参数读取异常）
          test: test
      cache-sync: # 缓存同步配置
        provider: lettuce # CacheSyncProviderId （默认值：none）
        first: true # 一级缓存数据同步（默认值：true，如仅有一级缓存，请改为 false）
        second: false # 二级缓存数据同步（默认值：false）
        enable-group-prefix: true # 是否添加 group 作为前缀（默认值：true）
        max-len: 1000 # 缓存同步队列最大长度 （默认值：10000）
        params: # 用于自定义扩展实现的非标参数，map 类型 （如不使用，请删除，否则会提示参数读取异常）
          test: test
      key-codec: jackson # 用于将键转换成 String（默认值：jackson）
      first: # 一级缓存配置
        provider: caffeine # StoreProviderId（默认值：caffeine）
        initial-capacity: 65536 # 初始容量（默认值：65536）
        maximum-size: 65536 # 最大容量（默认值：65536）
        maximum-weight: 0 # 最大权重 （默认值：0，如小于等于 0，表示不采用基于权重的驱逐策略）
        key-strength: STRONG # 基于键的引用类型执行驱逐策略（默认值：STRONG）
        value-strength: STRONG # 基于值的引用类型执行驱逐策略（默认值：STRONG）
        expire-after-write: 3600000 # 数据写入后的存活时间（内嵌缓存默认值：3600000 单位：毫秒）
        expire-after-access: 300000 # 数据访问后的存活时间（默认值：300000 单位：毫秒，适用于 caffeine）
        enable-random-ttl: true # 是否使用随机存活时间（默认值：true，避免大量的 key 集中过期）
        enable-null-value: true # 是否允许保存空值（默认值：true）
        value-codec: none # 用于值对象的序列化（内嵌缓存默认值：none，不启用序列化）
        value-compressor: # 值压缩配置，如需启用压缩，必须启用序列化（先序列化后压缩）
          provider: none # CompressorProviderId（默认值：none，不启用数据压缩）
        params: # 用于自定义扩展实现的非标参数，map 类型 （如不使用，请删除，否则会提示参数读取异常）
          test: test
      second: # 二级缓存配置
        provider: lettuce # StoreProviderId（默认值：none）
        redis-type: STRING # Redis 命令类型（默认：STRING，如无需过期，可设为 HASH）
        expire-after-write: 7200000 # 数据写入后的存活时间（外部缓存默认值：7200000 单位：毫秒）
        enable-group-prefix: true # 是否添加 group 作为前缀（默认值：true，仅适用于外部缓存）
        enable-random-ttl: true # 是否使用随机存活时间（默认值：true，避免大量的 key 集中过期）
        enable-null-value: true # 是否允许保存空值（默认值：true）
        value-codec: jackson # 用于值对象的序列化（外部缓存默认值：jackson）
        value-compressor: # 值压缩配置，如需启用压缩，必须启用序列化（先序列化后压缩）
          provider: none # CompressorProviderId（默认值：none，不启用数据压缩）
          nowrap: false # 是否不携带封装信息（默认值：false，此配置对于 DeflaterCompressor 有效）
          level: 5 # 压缩级别（默认值：-1，此配置对于 DeflaterCompressor 有效）
        params: # 用于自定义扩展实现的非标参数，map 类型 （如不使用，请删除，否则 spring boot 会提示参数读取异常）
          test: test
      third: # 三级缓存配置
        provider: none # StoreProviderId（三级缓存默认值：none）
        redis-type: HASH # Redis 命令类型（默认：STRING，如无需过期，可设为 HASH）
        keySequenceSize: 16 # HASH 键序列数量，仅用于 Redis 集群模式，且采用 Redis-Hash 作为数据存储，其它模式下无意义。（默认值：16）
        expire-after-write: 7200000 # 数据写入后的存活时间（外部缓存默认值：7200000 单位：毫秒）
        enable-group-prefix: true # 是否添加 group 作为前缀（默认值：true，仅适用于外部缓存）
        enable-random-ttl: true # 是否使用随机存活时间（默认值：true，避免大量的 key 集中过期）
        enable-null-value: true # 是否允许保存空值（默认值：true）
        value-codec: jackson # 用于值的序列化（外部缓存默认值：jackson）
        value-compressor: # 值压缩配置
          provider: none # CompressorProviderId（默认值：none，不启用数据压缩）
          nowrap: false # 是否不携带封装信息（默认值：false，此配置对于 DeflaterCompressor 有效）
          level: 5 # 压缩级别（默认值：-1，此配置对于 DeflaterCompressor 有效）
        params: # 用于自定义扩展实现的非标参数，map 类型 （如不使用，请删除，否则会提示参数读取异常）
          test: test
  cache: # 缓存配置（template 是公共配置，cache 是具体缓存个性配置，仅需配置与对应 template 不同的部分）
    - name: user # 缓存名称
      template-id: t0 # 模板id（默认值：t0，如未配置，默认从 id 为 t0 的模板中复制配置项）
      # …… 其余配置项与模板配置相同，所以直接省略
      # 另，如此缓存配置与 id 为 t0 的模板配置完全相同，name 与 template-id 其实也可以省略。
    - name: order # 缓存名称
      template-id: t0 # 模板id（默认值：t0，如未配置，默认从 id 为 t0 的模板中复制配置项）
      # …… 其余配置项与模板配置相同，所以直接省略
      # 另，如此缓存配置与 id 为 t0 的模板配置完全相同，name 与 template-id 其实也可以省略。
  log-metrics-interval: 60000 # 缓存指标采集的间隔时长，仅用于 LogCacheMetricsProvider（默认值：60000 单位：毫秒）
  scheduler: # 调度器配置
    core-pool-size: 1 # 定时任务调度器核心线程数，如未配置，则使用 (核心数 / 8)，最小为 1。
  redis: # Redis 配置（如不使用 Redis，可直接删除此配置项；如未配置，则不会生成相应的实例对象）
    lettuce: # Lettuce 客户端配置
      - id: lettuce # RedisOperatorFactory, RedisStoreProvider …… 唯一标识（默认值：lettuce）
        batch-size: 10000 # 单批次命令提交数量阈值（默认值：10000）
        metrics: # RedisCacheMetricsProvider 配置
          # 另，Redis StreamPublisher 仅负责发送统计指标信息，统计汇总需用户自行实现
          interval: 60000 # 缓存指标统计的时间间隔（默认值：60000，单位：毫秒）
          max-len: 10000 # Redis stream 最大长度（默认值：10000，采用近似裁剪，实际长度可能略大于配置值）
          charset: UTF-8 # 字符集，用于缓存统计指标消息的编解码（默认值：UTF-8）
          codec: jackson # 统计消息编解码
          enable-group-prefix: false # 是否附加 group 作为后缀（默认值：false）
        stream: # StreamContainer 配置
          block: -1 # 读取 Stream 时的阻塞时长（默认值： 10 单位：毫秒）
          count: 1000 # 同步任务每次从 Stream 读取的最大消息数量（默认值： 1000）
          interval: 10 # 当次同步任务结束后，下次任务开始前的间隔时长（默认值： 10 单位：毫秒）
        sync:
          codec: jackson # 缓存数据同步消息编解码
        standalone: # 单机模式 或 副本集模式
          # 这里为了演示 standalone，sentinel，cluster 分别如何配置，所以三种配置都存在，实际只需保留真正使用的其中一种
          # 当三种配置都存在时，那么优先使用 sentinel 配置，其次 cluster，最后 standalone
          node: 127.0.0.1:6379 # Redis 节点，支持 UnixSocket 方式
          nodes: socket:/tmp/redis.sock, 127.0.0.1:6378 # Redis 节点列表
          read-from: # 读节点选择策略（默认值：UPSTREAM，仅从主节点读取数据）
          username: # Redis 用户名
          password: # Redis 密码
          database: 0 # Redis 数据库索引（默认值：0）
          client-name: # Redis 客户端名称
          ssl: false # 是否启用 SSL（默认值：false）
          start-tls: false # 是否启用 TLS（默认值：false）
          ssl-verify-mode: FULL # SSL 验证模式，只有 ssl 配置为 true 时才有意义（默认值：FULL）
          timeout: 60000 # 同步执行命令等待完成的最大时长（默认值：60000 单位：毫秒）
          shutdown-timeout: 2000
          shutdown-quiet-period: 100
          client-options: # 客户端选项，一般保持默认即可
            auto-reconnect: true # 是否自动重连（默认值：true）
            disconnected-behavior: DEFAULT # 连接断开后是否接受命令（默认值：DEFAULT）
            publish-on-scheduler: false # 是否使用专用的 scheduler 处理 publish 事件（默认值：false）
            ping-before-activate-connection: true # 连接激活前是否发送 PING 消息（默认值：true）
            protocol-version: RESP2 # Redis 协议版本（默认值：RESP3，Redis 6.0 以下请配置为 RESP2）
            suspend-reconnect-on-protocol-failure: # 是否在协议失败时暂停重连（默认值：false）
            request-queue-size: # 请求队列大小 （默认值：Integer.MAX_VALUE）
            socketOptions: # socket 配置选项
              connect-timeout: 10000 # Socket 连接超时（默认值：10000， 单位：毫秒）
              tcp-no-delay: true  # 是否启用 TCP_NODELAY（默认值：true）
              keep-alive: # KeepAlive 配置选项，仅适用于 epoll、 io_uring、Java 11 及之后版本的 NIO
                enabled: false # 是否启用 KeepAlive（默认值：false）
                count: 9 # KeepAlive 重试次数（默认值：9）
                idle: 7200000 # KeepAlive 空闲时间（默认值：7200000， 单位：毫秒）
                interval: 75000 # KeepAlive 发送间隔（默认值：75000， 单位：毫秒）
              tcp-user-timeout: # TCP_USER_TIMEOUT 配置选项，仅适用于 epoll 和 io_uring
                enabled: false # 是否启用 TCP_USER_TIMEOUT（默认值：false）
                tcp-user-timeout: 60000 # TCP 超时配置（默认值：7875000 单位：毫秒）
            ssl-options: # SSL 配置选项，只有 ssl 配置为 true 时才有意义
              ssl-provider: JDK # （默认值：JDK）
              key-store-type: # 密钥库格式（默认值：jks）
              keystore: # 密钥库路径
              keystore-password: # 密钥库密码
              truststore: # 信任库路径
              truststore-password: # 信任库密码
              protocols: # 支持的安全协议
              cipher-suites: # 支持的加密套件
              handshake-timeout: # 握手超时（默认值：10000 单位：毫秒）
            timeout-options: # 命令超时配置选项
              fixedTimeout: # 超时时间设为固定值（默认值：-1，单位：毫秒，即使用连接超时）
        sentinel: # 哨兵模式配置
          # 这里为了演示 standalone，sentinel，cluster 分别如何配置，所以三种配置都存在，实际只需保留真正使用的其中一种
          # 当三种配置都存在时，那么优先使用 sentinel 配置，其次 cluster，最后 standalone
          master-id: mymaster # 哨兵主节点名称
          nodes: 127.0.0.1:26377, 127.0.0.1:26378, 127.0.0.1:26379 # 哨兵节点列表
          read-from: # 读节点选择策略（默认值：UPSTREAM，仅从主节点读取数据）
          sentinel-username:  # 哨兵用户名
          sentinel-password:  # 哨兵密码
          username:  # Redis 用户名
          password:  # Redis 密码
          database: 0 # Redis 数据库索引（默认值：0）
          client-name: # Redis 客户端名称
          ssl: false # 是否启用 SSL（默认值：false）
          start-tls: false # 是否启用 TLS（默认值：false）
          ssl-verify-mode: FULL # SSL 验证模式，只有 ssl 配置为 true 时才有意义（默认值：FULL）
          timeout:  # 同步执行命令等待完成的最大时长（默认值：60000 单位：毫秒）
          shutdown-timeout: 2000
          shutdown-quiet-period: 100
          client-options: # 客户端选项，一般保持默认即可
            auto-reconnect: true # 是否自动重连（默认值：true）
            disconnected-behavior: DEFAULT # 连接断开后是否接受命令（默认值：DEFAULT）
            publish-on-scheduler: false # 是否使用专用的 scheduler 处理 publish 事件（默认值：false）
            ping-before-activate-connection: true # 连接激活前是否发送 PING 消息（默认值：true）
            protocol-version: RESP2 # Redis 协议版本（默认值：RESP3，Redis 6.0 以下请配置为 RESP2）
            suspend-reconnect-on-protocol-failure: # 是否在协议失败时暂停重连（默认值：false）
            request-queue-size: # 请求队列大小 （默认值：Integer.MAX_VALUE）
            socketOptions: # socket 配置选项
              connect-timeout: 10000 # Socket 连接超时（默认值：10000， 单位：毫秒）
              tcp-no-delay: true  # 是否启用 TCP_NODELAY（默认值：true）
              keep-alive: # KeepAlive 配置选项，仅适用于 epoll、 io_uring、Java 11 及之后版本的 NIO
                enabled: false # 是否启用 KeepAlive（默认值：false）
                count: 9 # KeepAlive 重试次数（默认值：9）
                idle: 7200000 # KeepAlive 空闲时间（默认值：7200000， 单位：毫秒）
                interval: 75000 # KeepAlive 发送间隔（默认值：75000， 单位：毫秒）
              tcp-user-timeout: # TCP_USER_TIMEOUT 配置选项，仅适用于 epoll 和 io_uring
                enabled: false # 是否启用 TCP_USER_TIMEOUT（默认值：false）
                tcp-user-timeout: 60000 # TCP 超时配置（默认值：7875000 单位：毫秒）
            ssl-options: # SSL 配置选项，只有 ssl 配置为 true 时才有意义
              ssl-provider: JDK # （默认值：JDK）
              key-store-type: # 密钥库格式（默认值：jks）
              keystore: # 密钥库路径
              keystore-password: # 密钥库密码
              truststore: # 信任库路径
              truststore-password: # 信任库密码
              protocols: # 支持的安全协议
              cipher-suites: # 支持的加密套件
              handshake-timeout: # 握手超时（默认值：10000 单位：毫秒）
            timeout-options: # 命令超时配置选项
              fixedTimeout: # 超时时间设为固定值（默认值：-1，单位：毫秒，即使用连接超时）
        cluster: # 集群模式配置
          # 这里为了演示 standalone，sentinel，cluster 分别如何配置，所以三种配置都存在，实际只需保留真正使用的其中一种
          # 当三种配置都存在时，那么优先使用 sentinel 配置，其次 cluster，最后 standalone
          nodes: 127.0.0.1:7001, 127.0.0.1:7002, 127.0.0.1:7003, 127.0.0.1:7004, 127.0.0.1:7005, 127.0.0.1:7006 # 集群节点列表
          read-from: # 读节点选择策略（默认值：UPSTREAM，仅从主节点读取数据）
          username: redis-admin # Redis 用户名
          password: 123456 # Redis 密码
          database: 0 # Redis 数据库索引（默认值：0）
          client-name: # Redis 客户端名称
          ssl: false # 是否启用 SSL（默认值：false）
          start-tls: false # 是否启用 TLS（默认值：false）
          ssl-verify-mode: FULL # SSL 验证模式，只有 ssl 配置为 true 时才有意义（默认值：FULL）
          timeout:  # 同步执行命令等待完成的最大时长（默认值：60000 单位：毫秒）
          shutdown-timeout: 2000
          shutdown-quiet-period: 100
          client-options: # 集群客户端选项，比一般客户端选项多了重定向、拓扑刷新等配置
            auto-reconnect: true # 是否自动重连（默认值：true）
            disconnected-behavior: DEFAULT # 连接断开后是否接受命令（默认值：DEFAULT）
            publish-on-scheduler: false # 是否使用专用的 scheduler 处理 publish 事件（默认值：false）
            ping-before-activate-connection: true # 连接激活前是否发送 PING 消息（默认值：true）
            protocol-version: RESP2 # Redis 协议版本（默认值：RESP3，Redis 6.0 以下请配置为 RESP2）
            suspend-reconnect-on-protocol-failure: # 是否在协议失败时暂停重连（默认值：false）
            request-queue-size: # 请求队列大小 （默认值：Integer.MAX_VALUE）
            max-redirects: # 集群：重定向最大重试次数（默认值：5）
            validate-cluster-node-membership: # 集群：是否验证集群节点成员关系（默认值：true）
            node-filter:    # 集群：建立连接的节点[白名单] （如未配置，连接所有节点；如有配置，只连接配置节点）
            topology-refresh-options: # 集群：拓扑刷新配置选项
              adaptive-refresh-triggers: # 集群：动态刷新触发器，列表类型（默认为空集）
              adaptive-refresh-timeout: # 集群：动态刷新超时（默认值：30000 单位：毫秒）
              close-stale-connections: # 集群：是否关闭旧连接（默认值：true）
              dynamic-refresh-sources: # 集群：是否动态刷新节点源（默认值：true）
              periodic-refresh-enabled: # 集群：是否启用周期刷新（默认值：true）
              refresh-period: # 集群：刷新周期 （默认值：30000 单位：毫秒）
              refresh-triggers-reconnect-attempts: # 集群：刷新触发器重连尝试次数（默认值：3）
            socketOptions: # socket 配置选项
              connect-timeout: 10000 # Socket 连接超时（默认值：10000， 单位：毫秒）
              tcp-no-delay: true  # 是否启用 TCP_NODELAY（默认值：true）
              keep-alive: # KeepAlive 配置选项，仅适用于 epoll、 io_uring、Java 11 及之后版本的 NIO
                enabled: false # 是否启用 KeepAlive（默认值：false）
                count: 9 # KeepAlive 重试次数（默认值：9）
                idle: 7200000 # KeepAlive 空闲时间（默认值：7200000， 单位：毫秒）
                interval: 75000 # KeepAlive 发送间隔（默认值：75000， 单位：毫秒）
              tcp-user-timeout: # TCP_USER_TIMEOUT 配置选项，仅适用于 epoll 和 io_uring
                enabled: false # 是否启用 TCP_USER_TIMEOUT（默认值：false）
                tcp-user-timeout: 60000 # TCP 超时配置（默认值：7875000 单位：毫秒）
            ssl-options: # SSL 配置选项，只有 ssl 配置为 true 时才有意义
              ssl-provider: JDK # （默认值：JDK）
              key-store-type: # 密钥库格式（默认值：jks）
              keystore: # 密钥库路径
              keystore-password: # 密钥库密码
              truststore: # 信任库路径
              truststore-password: # 信任库密码
              protocols: # 支持的安全协议
              cipher-suites: # 支持的加密套件
              handshake-timeout: # 握手超时（默认值：10000 单位：毫秒）
            timeout-options: # 命令超时配置选项
              fixedTimeout: # 超时时间设为固定值（默认值：-1，单位：毫秒，即使用连接超时）